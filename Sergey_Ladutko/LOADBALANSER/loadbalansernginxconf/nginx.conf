user  nginx;
worker_processes  auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
       proxy_cache_path /var/cache/nginx levels=2 keys_zone=pagecache:5m inactive=10m max_size=50m;
        upstream backend {
          server firstnginx;
          server secondnginx;
          
        }
    	# include       /etc/nginx/mime.types;
    	# default_type  application/octet-stream;
    	# sendfile        on;
server {
        listen 80;
        # Кешировать указанные коды ответов 5 минут
	      proxy_cache_valid 200 301 302 304 5m;
        # # Ключ по которому сохраняются и берутся данные из кеша
	      proxy_cache_key "$request_method|$http_if_modified_since|$http_if_none_match|$host|$request_uri";
        # # Защита от раздачи одинаковой куки в кешированном ответе
	      proxy_hide_header "Set-Cookie";
        # # Игнорировать параметры кеша заданные бекэндом
	      # proxy_ignore_headers "Cache-Control" "Expires";

        # # Указывает в каких случаях клиенту можно отдать несвежий ответ из кеша
        proxy_cache_use_stale error timeout invalid_header http_500 http_502 http_503 http_504;

        # # активировать зону кеширования pagecache
        # proxy_cache	pagecache;
        root /var/www/example.com/html;
        index index.html index.htm index.nginx-debian.html;
         
        server_name localhost;

        location / {
          proxy_pass http://backend;
      }
    }
}